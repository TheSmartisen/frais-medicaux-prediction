# Encodage binaire avec LabelEncoder
sex_encoder = LabelEncoder()
smoker_encoder = LabelEncoder()

df["sex"] = sex_encoder.fit_transform(df["sex"])
df["smoker"] = smoker_encoder.fit_transform(df["smoker"])

# Encodage one-hot pour `region`
df = pd.get_dummies(df, columns=['region'], drop_first=False)


# Sauvegarder les données et la liste des colonnes résultantes
with open("data.pkl", "wb") as f:
    pickle.dump({
        "data": df_encoded,
        "dummy_columns": list(df_encoded.columns),
        "sex_encoder": sex_encoder,
        "smoker_encoder": smoker_encoder
    }, f)


with open("data_and_encoders.pkl", "rb") as f:
    saved_objects = pickle.load(f)

df_loaded = saved_objects["data"]
sex_encoder = saved_objects["sex_encoder"]
smoker_encoder = saved_objects["smoker_encoder"]
dummy_columns = saved_objects["dummy_columns"]

# Encodage des nouvelles données avec get_dummies
new_data["sex"] = sex_encoder.transform(new_data["sex"])
new_data["smoker"] = smoker_encoder.transform(new_data["smoker"])
new_data_encoded = pd.get_dummies(new_data, columns=['region'], drop_first=False)

# Aligner avec les colonnes d'origine (ajout de colonnes manquantes avec 0)
for col in dummy_columns:
    if col not in new_data_encoded.columns:
        new_data_encoded[col] = 0

# Réordonner les colonnes pour correspondre à l'encodage d'origine
new_data_encoded = new_data_encoded[dummy_columns]